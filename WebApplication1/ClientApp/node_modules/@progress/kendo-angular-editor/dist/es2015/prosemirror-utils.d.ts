import { MarkType, Node, Mark, NodeType } from 'prosemirror-model';
import { EditorState } from 'prosemirror-state';
import { AlignRule } from './config/align-rules';
import { IndentRule } from './config/indent-rules';
import { ActiveMarks } from './common/active-marks';
/**
 * @hidden
 */
export declare const getUniqueStyleValues: (style: ActiveMarks, cssStyle: string) => string;
/**
 * @hidden
 */
export declare const isMarkActive: (state: EditorState<any>, markType: MarkType<any>) => boolean;
/**
 * @hidden
 */
export declare const isNodeActive: (state: EditorState<any>, nodeType: NodeType<any>, attrs?: Object) => boolean;
/**
 * @hidden
 */
export declare const isInListOfType: ({ selection }: EditorState<any>, nodeType: NodeType<any>) => boolean;
/**
 * @hidden
 */
export declare const getActiveMarks: ({ selection }: EditorState<any>, markType?: MarkType<any>) => ActiveMarks;
/**
 * @hidden
 */
export declare const getNodeTagName: (node: Node<any>) => string;
/**
 * @hidden
 */
export declare const activeNode: (state: EditorState<any>) => {
    name: string;
    tag: string;
};
/**
 * @hidden
 */
export declare const canIndent: (state: EditorState<any>, nodeType: NodeType<any>) => boolean;
/**
 * @hidden
 */
export declare const canOutdent: (state: EditorState<any>, nodeType: NodeType<any>) => boolean;
/**
 * @hidden
 */
export declare const getMark: (state: EditorState<any>, markType: MarkType<any>) => Mark<any>;
/**
 * @hidden
 */
export declare const getNodeFromSelection: (state: EditorState<any>) => Node<any>;
/**
 * @hidden
 */
export declare const getSelectionText: (state: EditorState<any>) => String;
/**
 * @hidden
 */
export declare const getHTML: (state: EditorState<any>) => string;
/**
 * @hidden
 */
export declare const createContentNode: (value: string) => Node<any>;
/**
 * @hidden
 */
export declare const hasSameMarkup: (dom1: string, dom2: string) => boolean;
/**
 * @hidden
 */
export declare const blockNodes: (state: EditorState<any>) => Node<any>[];
/**
 * @hidden
 * Checks if any block element in the selection is aligned.
 */
export declare const isAligned: (state: EditorState<any>, actions: AlignRule[]) => boolean;
/**
 * @hidden
 * Checks if any block element in the selection is indented.
 */
export declare const isIndented: (state: EditorState<any>, actions: IndentRule[]) => boolean;
/**
 * @hidden
 */
export declare const canIndentAsListItem: (state: EditorState<any>) => boolean;
/**
 * @hidden
 */
export declare const canOutdentAsListItem: (state: EditorState<any>) => boolean;
/**
 * @hidden
 */
export declare const canBeIndented: (state: EditorState<any>, rules: IndentRule[]) => boolean;
