import { undo, redo } from 'prosemirror-history';
import { schema } from './schema';
import { alignLeftRules, alignCenterRules, alignRightRules, alignRemoveRules } from './align-rules';
import { removeMark, toggleBold, toggleItalic, toggleUnderline, toggleStrikethrough, alignBlocks, createLink, format, setFontSize, setFontFamily, indent, outdent, setHTML, insertImage, insertText, toggleSubscript, toggleSuperscript, removeAllMarks, addOrUpdateStyle } from '../prosemirror-commands';
import { getHTML } from '../prosemirror-utils';
import { toggleOrderedList, toggleUnorderedList } from '../prosemirror-list-utils';
var ɵ0 = function () { return toggleBold; }, ɵ1 = function () { return removeAllMarks({ except: schema.marks.link }); }, ɵ2 = function (attr) { return createLink(attr); }, ɵ3 = function (font) { return setFontFamily(font); }, ɵ4 = function (size) { return setFontSize(size); }, ɵ5 = function (attr) { return createLink(attr); }, ɵ6 = function (text) { return insertText(text); }, ɵ7 = function () { return toggleItalic; }, ɵ8 = function () { return toggleStrikethrough; }, ɵ9 = function () { return toggleSubscript; }, ɵ10 = function () { return toggleSuperscript; }, ɵ11 = function () { return toggleUnderline; }, ɵ12 = function () { return removeMark(schema.marks.link); }, ɵ13 = function (color) { return addOrUpdateStyle('color', color); }, ɵ14 = function (color) { return addOrUpdateStyle('background-color', color); };
var inlineCommand = {
    bold: ɵ0,
    cleanFormatting: ɵ1,
    createLink: ɵ2,
    fontFamily: ɵ3,
    fontSize: ɵ4,
    insertFile: ɵ5,
    insertText: ɵ6,
    italic: ɵ7,
    strikethrough: ɵ8,
    subscript: ɵ9,
    superscript: ɵ10,
    underline: ɵ11,
    unlink: ɵ12,
    foreColor: ɵ13,
    backColor: ɵ14
};
var ɵ15 = function () { return alignBlocks(alignCenterRules); }, ɵ16 = function () { return alignBlocks(alignRemoveRules); }, ɵ17 = function () { return alignBlocks(alignLeftRules); }, ɵ18 = function () { return alignBlocks(alignRightRules); }, ɵ19 = function (formatAttr) { return format(formatAttr); }, ɵ20 = function () { return getHTML; }, ɵ21 = function () { return indent; }, ɵ22 = function (attrs) { return insertImage(attrs); }, ɵ23 = function () { return toggleOrderedList; }, ɵ24 = function () { return toggleUnorderedList; }, ɵ25 = function () { return outdent; }, ɵ26 = function () { return redo; }, ɵ27 = function (content) { return setHTML(content); }, ɵ28 = function () { return undo; };
var blockCommand = {
    alignCenter: ɵ15,
    alignJustify: ɵ16,
    alignLeft: ɵ17,
    alignRight: ɵ18,
    format: ɵ19,
    getHTML: ɵ20,
    indent: ɵ21,
    insertImage: ɵ22,
    // think about changing the command name.
    insertOrderedList: ɵ23,
    // think about changing the command name.
    insertUnorderedList: ɵ24,
    outdent: ɵ25,
    redo: ɵ26,
    setHTML: ɵ27,
    undo: ɵ28
};
/**
 * @hidden
 */
export var editorCommands = Object.assign({}, inlineCommand, blockCommand);
export { ɵ0, ɵ1, ɵ2, ɵ3, ɵ4, ɵ5, ɵ6, ɵ7, ɵ8, ɵ9, ɵ10, ɵ11, ɵ12, ɵ13, ɵ14, ɵ15, ɵ16, ɵ17, ɵ18, ɵ19, ɵ20, ɵ21, ɵ22, ɵ23, ɵ24, ɵ25, ɵ26, ɵ27, ɵ28 };
