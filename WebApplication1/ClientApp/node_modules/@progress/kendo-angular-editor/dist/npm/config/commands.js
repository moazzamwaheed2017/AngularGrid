"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var prosemirror_history_1 = require("prosemirror-history");
var schema_1 = require("./schema");
var align_rules_1 = require("./align-rules");
var prosemirror_commands_1 = require("../prosemirror-commands");
var prosemirror_utils_1 = require("../prosemirror-utils");
var prosemirror_list_utils_1 = require("../prosemirror-list-utils");
var ɵ0 = function () { return prosemirror_commands_1.toggleBold; }, ɵ1 = function () { return prosemirror_commands_1.removeAllMarks({ except: schema_1.schema.marks.link }); }, ɵ2 = function (attr) { return prosemirror_commands_1.createLink(attr); }, ɵ3 = function (font) { return prosemirror_commands_1.setFontFamily(font); }, ɵ4 = function (size) { return prosemirror_commands_1.setFontSize(size); }, ɵ5 = function (attr) { return prosemirror_commands_1.createLink(attr); }, ɵ6 = function (text) { return prosemirror_commands_1.insertText(text); }, ɵ7 = function () { return prosemirror_commands_1.toggleItalic; }, ɵ8 = function () { return prosemirror_commands_1.toggleStrikethrough; }, ɵ9 = function () { return prosemirror_commands_1.toggleSubscript; }, ɵ10 = function () { return prosemirror_commands_1.toggleSuperscript; }, ɵ11 = function () { return prosemirror_commands_1.toggleUnderline; }, ɵ12 = function () { return prosemirror_commands_1.removeMark(schema_1.schema.marks.link); }, ɵ13 = function (color) { return prosemirror_commands_1.addOrUpdateStyle('color', color); }, ɵ14 = function (color) { return prosemirror_commands_1.addOrUpdateStyle('background-color', color); };
exports.ɵ0 = ɵ0;
exports.ɵ1 = ɵ1;
exports.ɵ2 = ɵ2;
exports.ɵ3 = ɵ3;
exports.ɵ4 = ɵ4;
exports.ɵ5 = ɵ5;
exports.ɵ6 = ɵ6;
exports.ɵ7 = ɵ7;
exports.ɵ8 = ɵ8;
exports.ɵ9 = ɵ9;
exports.ɵ10 = ɵ10;
exports.ɵ11 = ɵ11;
exports.ɵ12 = ɵ12;
exports.ɵ13 = ɵ13;
exports.ɵ14 = ɵ14;
var inlineCommand = {
    bold: ɵ0,
    cleanFormatting: ɵ1,
    createLink: ɵ2,
    fontFamily: ɵ3,
    fontSize: ɵ4,
    insertFile: ɵ5,
    insertText: ɵ6,
    italic: ɵ7,
    strikethrough: ɵ8,
    subscript: ɵ9,
    superscript: ɵ10,
    underline: ɵ11,
    unlink: ɵ12,
    foreColor: ɵ13,
    backColor: ɵ14
};
var ɵ15 = function () { return prosemirror_commands_1.alignBlocks(align_rules_1.alignCenterRules); }, ɵ16 = function () { return prosemirror_commands_1.alignBlocks(align_rules_1.alignRemoveRules); }, ɵ17 = function () { return prosemirror_commands_1.alignBlocks(align_rules_1.alignLeftRules); }, ɵ18 = function () { return prosemirror_commands_1.alignBlocks(align_rules_1.alignRightRules); }, ɵ19 = function (formatAttr) { return prosemirror_commands_1.format(formatAttr); }, ɵ20 = function () { return prosemirror_utils_1.getHTML; }, ɵ21 = function () { return prosemirror_commands_1.indent; }, ɵ22 = function (attrs) { return prosemirror_commands_1.insertImage(attrs); }, ɵ23 = function () { return prosemirror_list_utils_1.toggleOrderedList; }, ɵ24 = function () { return prosemirror_list_utils_1.toggleUnorderedList; }, ɵ25 = function () { return prosemirror_commands_1.outdent; }, ɵ26 = function () { return prosemirror_history_1.redo; }, ɵ27 = function (content) { return prosemirror_commands_1.setHTML(content); }, ɵ28 = function () { return prosemirror_history_1.undo; };
exports.ɵ15 = ɵ15;
exports.ɵ16 = ɵ16;
exports.ɵ17 = ɵ17;
exports.ɵ18 = ɵ18;
exports.ɵ19 = ɵ19;
exports.ɵ20 = ɵ20;
exports.ɵ21 = ɵ21;
exports.ɵ22 = ɵ22;
exports.ɵ23 = ɵ23;
exports.ɵ24 = ɵ24;
exports.ɵ25 = ɵ25;
exports.ɵ26 = ɵ26;
exports.ɵ27 = ɵ27;
exports.ɵ28 = ɵ28;
var blockCommand = {
    alignCenter: ɵ15,
    alignJustify: ɵ16,
    alignLeft: ɵ17,
    alignRight: ɵ18,
    format: ɵ19,
    getHTML: ɵ20,
    indent: ɵ21,
    insertImage: ɵ22,
    // think about changing the command name.
    insertOrderedList: ɵ23,
    // think about changing the command name.
    insertUnorderedList: ɵ24,
    outdent: ɵ25,
    redo: ɵ26,
    setHTML: ɵ27,
    undo: ɵ28
};
/**
 * @hidden
 */
exports.editorCommands = Object.assign({}, inlineCommand, blockCommand);
