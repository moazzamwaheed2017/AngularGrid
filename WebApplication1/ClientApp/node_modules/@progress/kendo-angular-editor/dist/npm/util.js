"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * @hidden
 */
function outerWidth(element) {
    var width = element.offsetWidth;
    var style = getComputedStyle(element);
    width += (parseFloat(style.marginLeft) || 0 + parseFloat(style.marginRight) || 0);
    return width;
}
exports.outerWidth = outerWidth;
/**
 * @hidden
 */
exports.serializeDOMAttrs = function (el) {
    return Array.from(el.attributes)
        .reduce(function (acc, curr) {
        var _a;
        return Object.assign({}, acc, (_a = {}, _a[curr.name] = curr.value, _a));
    }, {});
};
/**
 * @hidden
 */
exports.removeEntries = function (obj, predicate) {
    return Object.keys(obj)
        .filter(function (key) { return predicate(key); })
        .reduce(function (acc, curr) {
        var _a;
        return Object.assign(acc, (_a = {}, _a[curr] = obj[curr], _a));
    }, {});
};
/**
 * @hidden
 */
exports.removeEmptyEntries = function (obj) {
    var predicate = function (key) { return obj[key] !== null && obj[key] !== undefined && obj[key] !== ''; };
    return exports.removeEntries(obj, predicate);
};
/**
 * @hidden
 */
exports.isEmpty = function (obj) { return Object.keys(obj).length === 0; };
/**
 * @hidden
 */
exports.isNullOrUndefined = function (value) { return value === undefined || value === null; };
/**
 * @hidden
 */
exports.isPresent = function (value) { return !exports.isNullOrUndefined(value); };
/**
 * @hidden
 */
exports.detectIE = function () {
    var ua = window.navigator.userAgent;
    var msie = ua.indexOf('MSIE ');
    var trident = ua.indexOf('Trident/');
    return msie > 0 || trident > 0;
};
/**
 * @hidden
 */
exports.safeString = function (value) { return exports.isNullOrUndefined(value) ? '' : value.toString(); };
/**
 * @hidden
 */
exports.first = function (arr) { return arr[0]; };
/**
 * @hidden
 */
exports.last = function (arr) { return arr[arr.length - 1]; };
/**
 * @hidden
 */
exports.unique = function (arr) { return Array.from(new Set(arr)); };
/**
 * @hidden
 */
exports.split = function (splitter) { return function (value) { return value.split(splitter); }; };
/**
 * @hidden
 */
exports.trim = function (value) { return value.trim(); };
/**
 * @hidden
 */
exports.filter = function (predicate) { return function (arr) { return arr.filter(predicate); }; };
/**
 * @hidden
 */
exports.toArray = function (x) { return x instanceof Array ? x : [x]; };
