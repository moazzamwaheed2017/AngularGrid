"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var prosemirror_history_1 = require("prosemirror-history");
var align_rules_1 = require("./config/align-rules");
var schema_1 = require("./config/schema");
var prosemirror_utils_1 = require("./prosemirror-utils");
var indent_rules_1 = require("./config/indent-rules");
/**
 * @hidden
 */
exports.getToolbarState = function (state) { return ({
    alignCenter: prosemirror_utils_1.isAligned(state, align_rules_1.alignCenterRules),
    alignJustify: prosemirror_utils_1.isAligned(state, align_rules_1.alignRemoveRules),
    alignLeft: prosemirror_utils_1.isAligned(state, align_rules_1.alignLeftRules),
    alignRight: prosemirror_utils_1.isAligned(state, align_rules_1.alignRightRules),
    bold: prosemirror_utils_1.isMarkActive(state, schema_1.schema.marks.strong),
    cleanFormatting: state.selection.empty,
    format: prosemirror_utils_1.activeNode(state),
    indent: prosemirror_utils_1.canIndent(state, schema_1.schema.nodes.listItem) || prosemirror_utils_1.canBeIndented(state, indent_rules_1.indentRules),
    insertOrderedList: prosemirror_utils_1.isInListOfType(state, schema_1.schema.nodes.orderedList),
    insertUnorderedList: prosemirror_utils_1.isInListOfType(state, schema_1.schema.nodes.bulletList),
    italic: prosemirror_utils_1.isMarkActive(state, schema_1.schema.marks.em),
    link: prosemirror_utils_1.isMarkActive(state, schema_1.schema.marks.link),
    noSelection: state.selection.empty,
    outdent: prosemirror_utils_1.canOutdent(state, schema_1.schema.nodes.listItem) || prosemirror_utils_1.canBeIndented(state, indent_rules_1.outdentRules),
    redo: !prosemirror_history_1.redo(state),
    strikethrough: prosemirror_utils_1.isMarkActive(state, schema_1.schema.marks.strikethrough),
    style: prosemirror_utils_1.getActiveMarks(state, schema_1.schema.marks.style),
    subscript: prosemirror_utils_1.isMarkActive(state, schema_1.schema.marks.subscript),
    superscript: prosemirror_utils_1.isMarkActive(state, schema_1.schema.marks.superscript),
    underline: prosemirror_utils_1.isMarkActive(state, schema_1.schema.marks.underline),
    undo: !prosemirror_history_1.undo(state)
}); };
/**
 * @hidden
 */
exports.initialToolBarState = {
    //marks
    bold: false,
    italic: false,
    underline: false,
    strikethrough: false,
    unlink: true,
    subscript: false,
    superscript: false,
    style: { marks: [], hasNodesWithoutMarks: false },
    //nodes
    format: { text: 'Format', tag: null },
    insertOrderedList: false,
    insertUnorderedList: false,
    indent: false,
    outdent: false,
    alignLeft: false,
    alignCenter: false,
    alignRight: false,
    alignJustify: false,
    //history
    undo: true,
    redo: true,
    //selection
    noSelection: true,
    cleanFormatting: true
};
