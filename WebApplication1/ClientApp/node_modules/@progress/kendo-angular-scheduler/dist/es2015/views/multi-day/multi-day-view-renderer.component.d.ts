import { NgZone, QueryList, ElementRef, Renderer2, TemplateRef, ChangeDetectorRef } from '@angular/core';
import { IntlService } from '@progress/kendo-angular-intl';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { Subject } from 'rxjs';
import { DateRange, ViewItem } from '../../types';
import { ViewContextService } from '../view-context.service';
import { ViewStateService } from '../view-state.service';
import { DayTimeSlotService } from '../day-time/day-time-slot.service';
import { SchedulerTask } from '../common/scheduler-task';
import { DayTimeViewComponent } from '../day-time/day-time-view.component';
import { HintContainerComponent } from '../common/hint-container.component';
import { PDFService } from '../../pdf/pdf.service';
/**
 * @hidden
 */
export declare class MultiDayViewRendererComponent extends DayTimeViewComponent {
    name: string;
    slotFill: number;
    allDaySlotTemplate: TemplateRef<any>;
    allDayEventTemplate: TemplateRef<any>;
    minorTimeHeaderTemplate: TemplateRef<any>;
    majorTimeHeaderTemplate: TemplateRef<any>;
    dayCells: QueryList<ElementRef>;
    headerHintContainer: HintContainerComponent;
    dateFormat: any;
    allDayResizeHintFormat: any;
    allDayItems: Subject<SchedulerTask[]>;
    readonly allDaySlotTemplateRef: TemplateRef<any>;
    readonly allDayEventTemplateRef: TemplateRef<any>;
    readonly minorTimeHeaderTemplateRef: TemplateRef<any>;
    readonly majorTimeHeaderTemplateRef: TemplateRef<any>;
    readonly allDayMessage: string;
    readonly allDayResizeHint: boolean;
    readonly allDayDragHint: boolean;
    private schedulerAllDaySlotTemplate;
    private schedulerAllDayEventTemplate;
    private schedulerMinorTimeHeaderTemplate;
    private schedulerMajorTimeHeaderTemplate;
    private dragContainers;
    constructor(localization: LocalizationService, viewContext: ViewContextService, viewState: ViewStateService, intl: IntlService, slotService: DayTimeSlotService, zone: NgZone, renderer: Renderer2, element: ElementRef, changeDetector: ChangeDetectorRef, pdfService: PDFService);
    protected optionsChange(changes: any): void;
    ngOnChanges(changes: any): void;
    horizontalColspan(resourceIndex: number): any;
    verticalRowspan(resourceIndex: number): any;
    allDaySlotClass(slot: any, resourceIndex: any): string;
    protected createTasks(items: ViewItem[], dateRange: DateRange): any[];
    protected onTasksChange(): void;
    protected reflow(): void;
    protected dragHorizontal(slot: any): boolean;
    protected updateHintContainer(): void;
    protected onRelease(): void;
    protected updateDragContainer(args: any): void;
    protected containerByPosition({ x, y }: any): any;
    protected readonly containers: any[];
    protected scrollContainer(callback: any, args: any): void;
    protected dragRanges(slot: any): any;
    protected dragHintEventStyleArgs(): any;
    protected draggedIsAllDay(task: any, slot: any): boolean;
    protected dragHintSize(firstSlot: any, lastSlot: any): any;
    protected currentTimeArrowOffset(): number;
}
